rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isSigned() {
      return request.auth != null;
    }
    function isAdmin () {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
    }

    match /userPosts/{id} {
      function isOwnData () {
        return request.auth.uid == resource.data.uid
      }
      allow read: if true;
      allow create: if isSigned();
      allow update: if isOwnData() || isAdmin();
      allow delete: if isOwnData() || isAdmin();
    }

    match /userAttachments/{id} {
      function isOwnData () {
        return request.auth.uid == resource.data.uid
      }
      allow read: if true;
      allow create: if isSigned();
      allow update: if isOwnData() || isAdmin();
      allow delete: if isOwnData() || isAdmin();
    }


    match /posts/{id} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /users/{id} {
      function isOwnData () {
        return request.auth.uid == id;
      }

      allow read: if isOwnData();
      // allow write: if false;
      allow create: if false; // functions
      allow update: if isOwnData();
      allow delete: if false;
    }
  }
}